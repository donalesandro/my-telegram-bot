from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    CallbackQueryHandler,
    CallbackContext,
    MessageHandler,
    filters
)
import logging
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–ª—É—á—à–µ —Ö—Ä–∞–Ω–∏—Ç—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è)
TOKEN = "8097253421:AAFYdM2NA5GhrqH9hn98V0WgIUG6X85UJZM"

# –î–∞–Ω–Ω—ã–µ –æ –º–∏–∫—Ä–æ–∑–∞–π–º–∞—Ö
LOANS = {
    "5000": [
        {"name": "–í–µ–±–∑–∞–π–º", "url": "https://clck.ru/3MFDCC", "description": "–ü–µ—Ä–≤—ã–π –∑–∞–µ–º - 0%"},
        {"name": "–ó–ê–Å–ú.–†–£", "url": "https://clck.ru/3MEjzA", "description": "–ü–µ—Ä–≤—ã–π –∏ —à–µ—Å—Ç–æ–π –∑–∞—ë–º –ø–æ–¥ 0%"},
        {"name": "OneClickMoney", "url": "https://clck.ru/3MFDFx", "description": "–ë—ã—Å—Ç—Ä–æ, —É–¥–æ–±–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ"},
        {"name": "–ê –î–µ–Ω—å–≥–∏", "url": "https://clck.ru/3MEk73", "description": "–î–ª—è –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–µ—Ä–≤—ã–µ 7 –¥–Ω–µ–π –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è - –±–µ—Å–ø–ª–∞—Ç–Ω–æ"}
    ],
    "10000": [
        {"name": "MoneyMan", "url": "https://clck.ru/3MFDJn", "description": "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–¥–ª–µ–Ω–∏—è –∑–∞–π–º–∞ –¥–æ —á–µ—Ç—ã—Ä–µ—Ö –Ω–µ–¥–µ–ª—å."},
        {"name": "–í–∞—à–ö—Ä–µ–¥–∏—Ç", "url": "https://clck.ru/3MEkCR", "description": "–ü–µ—Ä–≤—ã–π –∑–∞—ë–º –±–µ—Å–ø–ª–∞—Ç–Ω–æ!"},
        {"name": "–ö–µ–∫–∞—Å.—Ä—É", "url": "https://clck.ru/3MFDLb", "description": "–ü–µ—Ä–≤—ã–µ —Ç—Ä–∏ –∑–∞–π–º–∞ - –±–µ—Å–ø–ª–∞—Ç–Ω–æ!"},
        {"name": "–ó–∞–π–º–∏–†—É–±", "url": "https://clck.ru/3MEkSk", "description": "0% –¥–ª—è –ø–µ—Ä–≤–∏—á–Ω—ã—Ö –∑–∞–µ–º—â–∏–∫–æ–≤ –¥–æ 30 000 —Ä—É–±"}
    ],
    "30000": [
        {"name": "–ù–µ–±—É—Å", "url": "https://clck.ru/3MEkGV", "description": "–î–æ 100 000 ‚ÇΩ –ø–æ–¥ 0,48% –≤ –¥–µ–Ω—å."},
        {"name": "Boostra", "url": "https://clck.ru/3MFDN2", "description": "–î–µ–Ω—å–≥–∏ –Ω–∞ –∫–∞—Ä—Ç—É —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç."},
        {"name": "–õ–∞–π–º-–ó–∞–π–º", "url": "https://clck.ru/3MFDQh", "description": "–ë—ã—Å—Ç—Ä–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ø–æ –∑–∞—è–≤–∫–µ, –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ."},
        {"name": "–û—Ç–ª–∏—á–Ω—ã–µ–ù–∞–ª–∏—á–Ω—ã–µ", "url": "https://clck.ru/3MEkh2", "description": "–î–æ 30 000 ‚ÇΩ –Ω–∞ 25 –¥–Ω–µ–π –ø–æ–¥ 0.8% –≤ –¥–µ–Ω—å"}
    ]
}

# –î–∞–Ω–Ω—ã–µ –æ –ö—Ä–µ–¥–∏—Ç–Ω–æ–º –¥–æ–∫—Ç–æ—Ä–µ
CREDIT_DOCTOR = {
    "name": "–ö—Ä–µ–¥–∏—Ç–Ω—ã–π –¥–æ–∫—Ç–æ—Ä –æ—Ç –°–æ–≤–∫–æ–º–±–∞–Ω–∫–∞",
    "url": "https://sovcombank.ru/credit-doctor",
    "description": "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏",
    "options": [
        {"name": "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫—Ä–µ–¥–∏—Ç–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥", "url": "https://clck.ru/3MEneE"},
        {"name": "–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", "url": "https://clck.ru/3MEneE"},
        {"name": "–ü–æ–¥–æ–±—Ä–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã", "url": "https://clck.ru/3MEneE"}
    ]
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
MAIN_MENU_KEYBOARD = [
    ["üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫—Ä–µ–¥–∏—Ç–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é"],
    ["üí∞ –ü–æ–¥–æ–±—Ä–∞—Ç—å –º–∏–∫—Ä–æ–∑–∞–π–º"],
    ["ü©∫ –ö—Ä–µ–¥–∏—Ç–Ω—ã–π –¥–æ–∫—Ç–æ—Ä"],
    ["‚ÑπÔ∏è –ü–æ–º–æ—â—å"]
]

async def start(update: Update, context: CallbackContext) -> None:
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
    if not update.message:
        return
        
    user = update.effective_user
    reply_markup = ReplyKeyboardMarkup(MAIN_MENU_KEYBOARD, resize_keyboard=True)
    
    await update.message.reply_text(
        f"üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n\n"
        "–Ø - —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫.\n\n"
        "üí∞ –ü–æ–º–æ–≥—É –ø–æ–ª—É—á–∏—Ç—å –í–∞–º –∑–∞–π–º –ø–æ–¥ 0% –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å - –Ω–∞ –í–∞—à—É –∫–∞—Ä—Ç—É.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=reply_markup
    )

async def handle_message(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    if not update.message:
        return
        
    text = update.message.text
    
    if text == "üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫—Ä–µ–¥–∏—Ç–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é":
        await check_credit_history(update, context)
    elif text == "üí∞ –ü–æ–¥–æ–±—Ä–∞—Ç—å –º–∏–∫—Ä–æ–∑–∞–π–º":
        await show_loan_amounts(update, context)
    elif text == "ü©∫ –ö—Ä–µ–¥–∏—Ç–Ω—ã–π –¥–æ–∫—Ç–æ—Ä":
        await show_credit_doctor(update, context)
    elif text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å":
        await show_help(update, context)
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é")

async def check_credit_history(update: Update, context: CallbackContext) -> None:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏"""
    keyboard = [
        [InlineKeyboardButton("–ö—Ä–µ–¥–∏—Å—Ç–æ—Ä–∏—è", url="https://clck.ru/3MEjm5")],
        [InlineKeyboardButton("‚Üê –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data='main_menu')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "üìä <b>–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏</b>\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ —Ä–∞–∑ –≤ –≥–æ–¥ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ—é –∫—Ä–µ–¥–∏—Ç–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é "
        "–≤ —Å–ª–µ–¥—É—é—â–∏—Ö –±—é—Ä–æ:",
        reply_markup=reply_markup,
        parse_mode="HTML"
    )

async def show_loan_amounts(update: Update, context: CallbackContext) -> None:
    """–í—ã–±–æ—Ä —Å—É–º–º—ã –º–∏–∫—Ä–æ–∑–∞–π–º–∞"""
    keyboard = [
        [InlineKeyboardButton("–î–æ 5 000 ‚ÇΩ", callback_data='loan_5000')],
        [InlineKeyboardButton("–î–æ 10 000 ‚ÇΩ", callback_data='loan_10000')],
        [InlineKeyboardButton("–î–æ 30 000 ‚ÇΩ", callback_data='loan_30000')],
        [InlineKeyboardButton("‚Üê –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data='main_menu')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "üí∞ <b>–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –º–∏–∫—Ä–æ–∑–∞–π–º–∞:</b>",
        reply_markup=reply_markup,
        parse_mode="HTML"
    )

async def show_loans(update: Update, context: CallbackContext, amount: str) -> None:
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã –∑–∞–π–º–æ–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—É–º–º—ã"""
    query = update.callback_query
    await query.answer()
    
    loans_list = LOANS.get(amount, [])
    
    buttons = []
    for loan in loans_list:
        buttons.append([InlineKeyboardButton(
            f"{loan['name']} - {loan['description']}",
            url=loan['url']
        )])
    
    buttons.append([InlineKeyboardButton("‚Üê –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é —Å—É–º–º—É", callback_data='back_to_amounts')])
    
    reply_markup = InlineKeyboardMarkup(buttons)
    
    text = f"üè¶ <b>–í–∞—Ä–∏–∞–Ω—Ç—ã –∑–∞–π–º–æ–≤ –¥–æ {amount} ‚ÇΩ:</b>\n\n"
    text += "\n".join([f"‚Ä¢ {loan['name']}: {loan['description']}" for loan in loans_list])
    
    await query.edit_message_text(
        text=text,
        reply_markup=reply_markup,
        parse_mode="HTML"
    )

async def show_credit_doctor(update: Update, context: CallbackContext) -> None:
    """–ú–µ–Ω—é –ö—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ –¥–æ–∫—Ç–æ—Ä–∞"""
    keyboard = [
        [InlineKeyboardButton(option["name"], url=option["url"])]
        for option in CREDIT_DOCTOR["options"]
    ]
    keyboard.append([InlineKeyboardButton("‚Üê –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data='main_menu')])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        f"ü©∫ <b>{CREDIT_DOCTOR['name']}</b>\n\n"
        f"{CREDIT_DOCTOR['description']}\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏:",
        reply_markup=reply_markup,
        parse_mode="HTML"
    )

async def show_help(update: Update, context: CallbackContext) -> None:
    """–ú–µ–Ω—é –ø–æ–º–æ—â–∏"""
    keyboard = [[InlineKeyboardButton("‚Üê –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data='main_menu')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "‚ÑπÔ∏è <b>–ü–æ–º–æ—â—å</b>\n\n"
        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:\n\n"
        "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫—Ä–µ–¥–∏—Ç–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é\n"
        "‚Ä¢ –ü–æ–¥–æ–±—Ä–∞—Ç—å –º–∏–∫—Ä–æ–∑–∞–π–º\n"
        "‚Ä¢ –ü–æ–ª—É—á–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Å–æ–≤–µ—Ç—ã\n\n"
        "‚Ä¢ –ß—Ç–æ–±—ã —É–≤–µ–ª–∏—á–∏—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∏ —Å–∫–æ—Ä–æ—Å—Ç—å –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞–π–º–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –∞–Ω–∫–µ—Ç—ã —Å—Ä–∞–∑—É –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–æ–º–ø–∞–Ω–∏—è—Ö\n\n"
        "–û—Ü–µ–Ω–∏–≤–∞–π—Ç–µ —Å–≤–æ–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏ —Ä–∏—Å–∫–∏. –ò–∑—É—á–∏—Ç–µ –≤—Å–µ —É—Å–ª–æ–≤–∏—è –∫—Ä–µ–¥–∏—Ç–∞ (–∑–∞–π–º–∞)\n\n"
        "–ü—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é",
        reply_markup=reply_markup,
        parse_mode="HTML"
    )

async def button_handler(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏"""
    query = update.callback_query
    await query.answer()
    
    if query.data == 'main_menu':
        await start_with_keyboard(query, context)
    elif query.data == 'back_to_amounts':
        await show_loan_amounts_from_query(query, context)
    elif query.data.startswith('loan_'):
        amount = query.data.split('_')[1]
        await show_loans(update, context, amount)

async def start_with_keyboard(query: Update, context: CallbackContext) -> None:
    """–°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è callback"""
    user = query.from_user
    reply_markup = ReplyKeyboardMarkup(MAIN_MENU_KEYBOARD, resize_keyboard=True)
    
    await query.edit_message_text(
        f"üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n"
        "–Ø - —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    )
    await context.bot.send_message(
        chat_id=query.message.chat.id,
        text="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é:",
        reply_markup=reply_markup
    )

async def show_loan_amounts_from_query(query: Update, context: CallbackContext) -> None:
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—É–º–º—ã –∑–∞–π–º–æ–≤ –¥–ª—è callback"""
    keyboard = [
        [InlineKeyboardButton("–î–æ 5 000 ‚ÇΩ", callback_data='loan_5000')],
        [InlineKeyboardButton("–î–æ 10 000 ‚ÇΩ", callback_data='loan_10000')],
        [InlineKeyboardButton("–î–æ 30 000 ‚ÇΩ", callback_data='loan_30000')],
        [InlineKeyboardButton("‚Üê –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data='main_menu')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        "üí∞ <b>–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –º–∏–∫—Ä–æ–∑–∞–π–º–∞:</b>",
        reply_markup=reply_markup,
        parse_mode="HTML"
    )

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    try:
        application = ApplicationBuilder().token(TOKEN).build()
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        application.add_handler(CommandHandler("start", start))
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
        application.add_handler(CallbackQueryHandler(button_handler))
        
        logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
        application.run_polling()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e}")

if __name__ == '__main__':
    main()